{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-kkpb-dev-edp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load text data from On-prim to STG",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Preprocessing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-adf-preprocessing",
							"baseParameters": {
								"PARAMS": {
									"value": "@activity('Lookup1').output.firstrow.PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Preprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Preprocessing').output.runOutput.Status,'Success')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy STG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update Log Count Preprocess",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@activity('Lookup Schema').output.firstRow",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "dl_csv_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_PATH": "TMP/SOURCE/",
												"P_FILENAME": {
													"value": "@replace(activity('Lookup1').output.firstrow.SCHM_FI,'.json', '.txt')",
													"type": "Expression"
												},
												"P_DELIMITER": {
													"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
													"type": "Expression"
												},
												"P_ENCODING": {
													"value": "@activity('Lookup1').output.firstrow.ENCDNG",
													"type": "Expression"
												},
												"P_FIRSTROW_HDR": "Y",
												"P_CONTAINER": "working"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dl_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_CONTAINER": {
													"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
													"type": "Expression"
												},
												"P_PATH": {
													"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH,'/', pipeline().parameters.P_PRCS_OBJ.TGT_TBL, '/DATA_DT=', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
													"type": "Expression"
												},
												"P_FILENAME": {
													"value": "@concat(activity('Lookup1').output.firstrow.FI_NM)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Log Count",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_CNT_FI_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_FI_TGT": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_TGT": {
												"value": {
													"value": "@activity('Copy STG').output.rowsCopied",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_LD_ID": {
												"value": {
													"value": "@pipeline().parameters.P_LD_ID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_PRCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PRCS_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": null,
												"type": "String"
											},
											"P_ST": {
												"value": "Running",
												"type": "String"
											},
											"P_CNT_REC_CNTL": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Update Log Count Preprocess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_CNT_FI_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_FI_TGT": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_SRC": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.ActualRecord",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_CNT_REC_TGT": {
												"value": null,
												"type": "String"
											},
											"P_LD_ID": {
												"value": {
													"value": "@pipeline().parameters.P_LD_ID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_PRCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PRCS_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": null,
												"type": "String"
											},
											"P_ST": {
												"value": "Running",
												"type": "String"
											},
											"P_CNT_REC_CNTL": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.ExpectedRecord",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Update Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.ActualRecord",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.Description",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_ST": {
									"value": "Failed",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.ExpectedRecord",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.P_SCHEMA",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": "TMP/SOURCE/",
									"P_FILENAME": "CFPARX_20210303.txt",
									"P_DELIMITER": "|",
									"P_ENCODING": "UTF-8",
									"P_FIRSTROW_HDR": "Y",
									"P_CONTAINER": "working"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": "staging",
									"P_PATH": " internal/CBS/SIBS_LNMAST/DATA_DT=20210310",
									"P_FILENAME": "LNMAST_20210310.parquet"
								}
							}
						]
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": "SIBS_CFPARX.json"
								}
							}
						}
					}
				],
				"parameters": {
					"P_SCHEMA": {
						"type": "string",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "CFRECI",
										"type": "String"
									},
									"sink": {
										"path": "$['CFRECI']"
									}
								},
								{
									"source": {
										"name": "CFSEX",
										"type": "String"
									},
									"sink": {
										"path": "$['CFSEX']"
									}
								},
								{
									"source": {
										"name": "CFDSDS",
										"type": "String"
									},
									"sink": {
										"path": "$['CFDSDS']"
									}
								},
								{
									"source": {
										"name": "CFCCRD",
										"type": "String"
									},
									"sink": {
										"path": "$['CFCCRD']"
									}
								},
								{
									"source": {
										"name": "CFCCDL",
										"type": "String"
									},
									"sink": {
										"path": "$['CFCCDL']"
									}
								},
								{
									"source": {
										"name": "MNLDT8",
										"type": "Float"
									},
									"sink": {
										"path": "$['MNLDT8']"
									}
								},
								{
									"source": {
										"name": "MNLUID",
										"type": "String"
									},
									"sink": {
										"path": "$['MNLUID']"
									}
								},
								{
									"source": {
										"name": "MNLWID",
										"type": "String"
									},
									"sink": {
										"path": "$['MNLWID']"
									}
								},
								{
									"source": {
										"name": "MNLTIM",
										"type": "String"
									},
									"sink": {
										"path": "$['MNLTIM']"
									}
								},
								{
									"source": {
										"name": "MNLSRC",
										"type": "String"
									},
									"sink": {
										"path": "$['MNLSRC']"
									}
								},
								{
									"source": {
										"name": "MNCUID",
										"type": "String"
									},
									"sink": {
										"path": "$['MNCUID']"
									}
								},
								{
									"source": {
										"name": "MNCDT8",
										"type": "Float"
									},
									"sink": {
										"path": "$['MNCDT8']"
									}
								},
								{
									"source": {
										"name": "MNCTIM",
										"type": "String"
									},
									"sink": {
										"path": "$['MNCTIM']"
									}
								},
								{
									"source": {
										"name": "MNCWID",
										"type": "String"
									},
									"sink": {
										"path": "$['MNCWID']"
									}
								},
								{
									"source": {
										"name": "MNCSRC",
										"type": "String"
									},
									"sink": {
										"path": "$['MNCSRC']"
									}
								}
							]
						}
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}