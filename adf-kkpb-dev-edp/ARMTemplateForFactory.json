{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-kkpb-dev-edp"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"link_adls_onprim_edp_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'link_adls_onprim_edp'"
		},
		"link_blob_test_edp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'link_blob_test_edp'"
		},
		"link_dbw_edp_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'link_dbw_edp'"
		},
		"link_fs_kkpb_dev_edp_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'link_fs_kkpb_dev_edp'"
		},
		"link_func_edp_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'link_func_edp'"
		},
		"link_sqldb_kkpb_edp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'link_sqldb_kkpb_edp'"
		},
		"link_st_kkpb_edp_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'link_st_kkpb_edp'"
		},
		"link_syn_kkpb_edp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'link_syn_kkpb_edp'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stkkpbdevedp.dfs.core.windows.net"
		},
		"link_adls_onprim_edp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stkkpbdevedp.dfs.core.windows.net"
		},
		"link_fs_kkpb_dev_edp_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "E:\\Landing"
		},
		"link_fs_kkpb_dev_edp_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "administrator"
		},
		"link_func_edp_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://func-kkpb-test-edp.azurewebsites.net"
		},
		"link_kv_edp_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-kkpb-dev-edp.vault.azure.net/"
		},
		"link_spo_http_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kiatnakin365.sharepoint.com"
		},
		"link_st_kkpb_edp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stkkpbdevedp.dfs.core.windows.net"
		},
		"shir-kkpb-edp_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f3ef3afd-9903-4759-a715-dcd5523f3bbe/resourcegroups/rg-kkpb-test-edp/providers/Microsoft.DataFactory/factories/adf-kkpb-uat-edp/integrationruntimes/shir-kkpb-edp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/00_STREAM_COMMON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STREAM RESULT",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "UPDATE STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_STREM_RSLT')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									},
									"P_STREM_ID": {
										"type": "String",
										"value": {
											"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "FINAL STREAM",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_FINL_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@activity('START STREAM').output.FIRSTROW.DATA_DT",
											"type": "Expression"
										}
									},
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									},
									"P_STREM_ID": {
										"type": "String",
										"value": {
											"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SEND EMAIL",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GET EMAIL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "STREAM RESULT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-11.southeastasia.logic.azure.com:443/workflows/0c8fc5c0ef894032905ccf103cbe04a7/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=agmp-_JAWWQboJJN9WzVGHrl7MuFv6UUDPuhdqhiqAM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n\"Message\":\"@{activity('STREAM RESULT').output.firstrow.RESULT_SET}\",\n\"EmailTo\":\"@{activity('GET EMAIL').output.firstrow.EMAIL}\",\n\"Data_dt\":\"@{activity('FINAL STREAM').output.firstrow.DATA_DT_FORMAT}\",\n\"StreamName\":\"@{pipeline().parameters.P_STREM_NM}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET EMAIL",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FINAL STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_EMAIL')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									},
									"P_STREM_RSLT": {
										"type": "String",
										"value": {
											"value": "@activity('FINAL STREAM').output.FIRSTROW.STREM_RSLT",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "START STREAM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_STRT_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FINAL STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_UPDT_STREM')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_STREM_NM": {
									"value": {
										"value": "@pipeline().parameters.P_STREM_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREM_RSLT": {
									"value": {
										"value": "@activity('FINAL STREAM').output.firstrow.STREM_RSLT",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREM_ID": {
									"value": {
										"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Get Max Priority",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('V_LOOP'),activity('Get Max Priority').output.firstrow.prir)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_LOOP",
										"value": {
											"value": "@string(ADD(int(variables('V_TMP')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_TMP",
										"value": {
											"value": "@variables('V_LOOP')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "05_COMMON_RUN_PCS_GRP_BY PRIR",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "05_COMMON_RUN_PCS_GRP_BY PRIR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_STREAM": {
												"value": "@pipeline().parameters.P_STREM_NM",
												"type": "Expression"
											},
											"P_PRIR": {
												"value": "@variables('V_LOOP')",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_STREM_ID": {
												"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
												"type": "Expression"
											}
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Get Max Priority",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT MAX(PRIR) PRIR\nFROM [CNTL].[CNTL_CFG_PRCS_GRP]\nWHERE STREM_NM = ''', pipeline().parameters.P_STREM_NM, '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_STREM_NM": {
						"type": "string",
						"defaultValue": "EDP_SET"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					}
				},
				"variables": {
					"V_LOOP": {
						"type": "String",
						"defaultValue": "0"
					},
					"V_TMP": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/pipelines/05_COMMON_RUN_PCS_GRP_BY PRIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_STREAM_COMMON_2_bk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "START STREAM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_STRT_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Check Active Flag",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@EQUALS(activity('START STREAM').output.FIRSTROW.ACT_F,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "UPDATE STREAM_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_UPDT_STREM')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_STREM_NM": {
												"value": {
													"value": "@pipeline().parameters.P_STREM_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_STREM_RSLT": {
												"value": "SKIPPED",
												"type": "String"
											},
											"P_STREM_ID": {
												"value": {
													"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "STREAM RESULT",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "FINAL STREAM",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": {
												"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_STREM_RSLT')",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"P_STREM_NM": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.P_STREM_NM",
														"type": "Expression"
													}
												},
												"P_STREM_ID": {
													"type": "String",
													"value": {
														"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "FINAL STREAM",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Until1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": {
												"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_FINL_STREM')",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"P_DATA_DT": {
													"type": "String",
													"value": {
														"value": "@activity('START STREAM').output.FIRSTROW.DATA_DT",
														"type": "Expression"
													}
												},
												"P_STREM_NM": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.P_STREM_NM",
														"type": "Expression"
													}
												},
												"P_STREM_ID": {
													"type": "String",
													"value": {
														"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "SEND EMAIL",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "GET EMAIL",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "UPDATE STREAM",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-27.southeastasia.logic.azure.com:443/workflows/ae3c11e07db340b39cd14f5b2ed0356a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=r1EYZIlJt1ptTTkCekMQHnkWORNI-YGcR5tvGIGDNsg",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n\"Message\":\"@{activity('STREAM RESULT').output.firstrow.RESULT_SET}\",\n\"EmailTo\":\"@{activity('GET EMAIL').output.firstrow.EMAIL}\",\n\"Data_dt\":\"@{activity('FINAL STREAM').output.firstrow.DATA_DT_FORMAT}\",\n\"StreamName\":\"@{pipeline().parameters.P_STREM_NM}\"\n}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GET EMAIL",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "FINAL STREAM",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": {
												"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_EMAIL')",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"P_STREM_NM": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.P_STREM_NM",
														"type": "Expression"
													}
												},
												"P_STREM_RSLT": {
													"type": "String",
													"value": {
														"value": "@activity('FINAL STREAM').output.FIRSTROW.STREM_RSLT",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "UPDATE STREAM",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "STREAM RESULT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_UPDT_STREM')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_STREM_NM": {
												"value": {
													"value": "@pipeline().parameters.P_STREM_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_STREM_RSLT": {
												"value": {
													"value": "@activity('FINAL STREAM').output.firstrow.STREM_RSLT",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_STREM_ID": {
												"value": {
													"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Until1",
									"type": "Until",
									"dependsOn": [
										{
											"activity": "Get Max Priority",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('V_LOOP'),activity('Get Max Priority').output.firstrow.prir)",
											"type": "Expression"
										},
										"activities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set variable2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "V_LOOP",
													"value": {
														"value": "@string(ADD(int(variables('V_TMP')),1))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set variable2",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "V_TMP",
													"value": {
														"value": "@variables('V_LOOP')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "05_COMMON_RUN_PCS_GRP_BY PRIR",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Set variable1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "05_COMMON_RUN_PCS_GRP_BY PRIR",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"P_STREAM": {
															"value": "@pipeline().parameters.P_STREM_NM",
															"type": "Expression"
														},
														"P_PRIR": {
															"value": "@variables('V_LOOP')",
															"type": "Expression"
														},
														"P_RUN_MODE": {
															"value": "@pipeline().parameters.P_RUN_MODE",
															"type": "Expression"
														},
														"P_STREM_ID": {
															"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
															"type": "Expression"
														}
													}
												}
											}
										],
										"timeout": "7.00:00:00"
									}
								},
								{
									"name": "Get Max Priority",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT MAX(PRIR) PRIR\nFROM [CNTL].[CNTL_CFG_PRCS_GRP]\nWHERE STREM_NM = ''', pipeline().parameters.P_STREM_NM, '''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_STREM_NM": {
						"type": "string",
						"defaultValue": "EDP_SET"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					}
				},
				"variables": {
					"V_LOOP": {
						"type": "String",
						"defaultValue": "0"
					},
					"V_TMP": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/pipelines/05_COMMON_RUN_PCS_GRP_BY PRIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_STREAM_COMMON_bk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "GET PROCESS GROUP LIST",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_PRCS_GRP_BY_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH PROCESS GROUP",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET PROCESS GROUP LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET PROCESS GROUP LIST').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Each Process Group",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "10_COMMON_RUN_PCS_GRP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PRCS_GRP": {
												"value": "@item().PRCS_GRP",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_STREM_ID": {
												"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "STREAM RESULT",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "UPDATE STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_STREM_RSLT')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									},
									"P_STREM_ID": {
										"type": "String",
										"value": {
											"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "FINAL STREAM",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR EACH PROCESS GROUP",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_FINL_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@activity('START STREAM').output.FIRSTROW.DATA_DT",
											"type": "Expression"
										}
									},
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									},
									"P_STREM_ID": {
										"type": "String",
										"value": {
											"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SEND EMAIL",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GET EMAIL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "STREAM RESULT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-11.southeastasia.logic.azure.com:443/workflows/0c8fc5c0ef894032905ccf103cbe04a7/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=agmp-_JAWWQboJJN9WzVGHrl7MuFv6UUDPuhdqhiqAM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n\"Message\":\"@{activity('STREAM RESULT').output.firstrow.RESULT_SET}\",\n\"EmailTo\":\"@{activity('GET EMAIL').output.firstrow.EMAIL}\",\n\"Data_dt\":\"@{activity('FINAL STREAM').output.firstrow.DATA_DT_FORMAT}\",\n\"StreamName\":\"@{pipeline().parameters.P_STREM_NM}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET EMAIL",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FINAL STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_EMAIL')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									},
									"P_STREM_RSLT": {
										"type": "String",
										"value": {
											"value": "@activity('FINAL STREAM').output.FIRSTROW.STREM_RSLT",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "START STREAM",
						"description": "           ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_STRT_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FINAL STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_UPDT_STREM')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_STREM_NM": {
									"value": {
										"value": "@pipeline().parameters.P_STREM_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREM_RSLT": {
									"value": {
										"value": "@activity('FINAL STREAM').output.firstrow.STREM_RSLT",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREM_ID": {
									"value": {
										"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_STREM_NM": {
						"type": "string",
						"defaultValue": "EDP_SET"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					}
				},
				"variables": {
					"V_STREAM_RESULT": {
						"type": "String",
						"defaultValue": "-999"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/pipelines/10_COMMON_RUN_PCS_GRP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_STREAM_COMMON_temp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "GET PROCESS GROUP LIST",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_PRCS_GRP_BY_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH PROCESS GROUP",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET PROCESS GROUP LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET PROCESS GROUP LIST').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "10_COMMON_RUN_PCS_GRP_temp",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "10_COMMON_RUN_PCS_GRP_temp",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PRCS_GRP": {
												"value": "@item().PRCS_GRP",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_STREM_ID": {
												"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "START STREAM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_STRT_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_STREM_NM": {
						"type": "string",
						"defaultValue": "EDP_SET"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					}
				},
				"variables": {
					"V_STREAM_RESULT": {
						"type": "String",
						"defaultValue": "-999"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/10_COMMON_RUN_PCS_GRP_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/05_COMMON_RUN_PCS_GRP_BY PRIR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "GET PROCESS GROUP LIST",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_PRCS_GRP_BY_STREM_2')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRIR": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRIR",
											"type": "Expression"
										}
									},
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH PROCESS GROUP",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET PROCESS GROUP LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET PROCESS GROUP LIST').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Run Each Process Group",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "10_COMMON_RUN_PCS_GRP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PRCS_GRP": {
												"value": "@item().PRCS_GRP",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_STREM_ID": {
												"value": "@pipeline().parameters.P_STREM_ID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_STREAM": {
						"type": "string"
					},
					"P_PRIR": {
						"type": "string"
					},
					"P_RUN_MODE": {
						"type": "string"
					},
					"P_STREM_ID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/10_COMMON_RUN_PCS_GRP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10_COMMON_RUN_PCS_GRP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "GET PROCESS LIST",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_PRCS_BY_GRP')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRCS_GRP": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_GRP",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET PROCESS LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET PROCESS LIST').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "RUN COMMON PROCESS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "20_PCS_COMMON_START",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PRCS_NM": {
												"value": "@item().PRCS_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_STREM_ID": {
												"value": "@pipeline().parameters.P_STREM_ID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_PRCS_GRP": {
						"type": "string"
					},
					"P_RUN_MODE": {
						"type": "string"
					},
					"P_STREM_ID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/20_PCS_COMMON_START')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10_COMMON_RUN_PCS_GRP_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET PROCESS LIST",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS_BY_PCS_GRP]",
								"storedProcedureParameters": {
									"P_PCS_GRP": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_GRP",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET PROCESS LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET PROCESS LIST').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "RUN COMMON PROCESS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "20_PCS_COMMON_START",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PROCESS_NM": {
												"value": "@item().PCS_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_STREAM_SEQ_ID": {
												"value": "@pipeline().parameters.P_STREAM_SEQ_ID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_PCS_GRP": {
						"type": "string"
					},
					"P_RUN_MODE": {
						"type": "string"
					},
					"P_STREAM_SEQ_ID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/20_PCS_COMMON_START')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10_COMMON_RUN_PCS_GRP_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET PROCESS LIST",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_PRCS_BY_GRP')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRCS_GRP": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_GRP",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET PROCESS LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET PROCESS LIST').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "RUN COMMON PROCESS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "20_PCS_COMMON_START",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PRCS_NM": {
												"value": "@item().PRCS_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_STREM_ID": {
												"value": "@pipeline().parameters.P_STREM_ID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_PRCS_GRP": {
						"type": "string"
					},
					"P_RUN_MODE": {
						"type": "string"
					},
					"P_STREM_ID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/20_PCS_COMMON_START')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10_COMMON_RUN_PCS_GRP_temp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "GET PROCESS LIST",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_PRCS_BY_GRP')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRCS_GRP": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_GRP",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET PROCESS LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET PROCESS LIST').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GET PROCESS INFORMATION",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "START PROCESS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": {
												"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_PRCS]')",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"P_PRCS_NM": {
													"type": "String",
													"value": {
														"value": "@item().PRCS_NM",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Execute Pipeline Type 3",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GET PROCESS INFORMATION",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "40_PCS_COMMON_TYPE3",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_LD_ID": {
												"value": "@activity('START PROCESS').output.FIRSTROW.LD_ID",
												"type": "Expression"
											},
											"P_PRCS_NM": {
												"value": "@item().PRCS_NM",
												"type": "Expression"
											},
											"P_PRCS_OBJ": {
												"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "START PROCESS",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": {
												"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_STRT_PRCS]')",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"P_PRCS_NM": {
													"type": "String",
													"value": {
														"value": "@item().PRCS_NM",
														"type": "Expression"
													}
												},
												"P_RUN_MODE": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.P_RUN_MODE",
														"type": "Expression"
													}
												},
												"P_STREM_ID": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.P_STREM_ID",
														"type": "Expression"
													}
												},
												"P_ADF_RUN_ID": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_PRCS_GRP": {
						"type": "string"
					},
					"P_RUN_MODE": {
						"type": "string"
					},
					"P_STREM_ID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10_PCS_COMMON_START_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "INSERT PROCESS LOG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CNTL_START_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PROCESS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREAM_SEQ_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_SEQ_ID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "GET SKIP FLAG",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "INSERT PROCESS LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_SKIP_PROCESS",
							"value": {
								"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.SKIP_PROCESS",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CHECK SKIP FLAG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET SKIP FLAG",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GET LOAD ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('V_SKIP_PROCESS'),'0')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SKIP PROCESS",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "RUN_PCS_2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "30_PCS_COMMON_VALIDATE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PCS_NM": {
												"value": "@pipeline().parameters.P_PROCESS_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_LOAD_ID": {
												"value": "@variables('V_LOAD_ID')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LOAD ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "INSERT PROCESS LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_LOAD_ID",
							"value": {
								"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.LOAD_ID",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"P_PROCESS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_STREAM_SEQ_ID": {
						"type": "string",
						"defaultValue": "-999"
					}
				},
				"variables": {
					"V_SKIP_PROCESS": {
						"type": "String",
						"defaultValue": "999"
					},
					"V_LOAD_ID": {
						"type": "String",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/30_PCS_COMMON_VALIDATE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PCS_COMMON_START')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "START PROCESS",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_STRT_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREM_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_ID",
											"type": "Expression"
										}
									},
									"P_ADF_RUN_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "GET SKIP FLAG",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "START PROCESS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_SKIP_PRCS",
							"value": {
								"value": "@activity('START PROCESS').output.FIRSTROW.SKIP_PRCS",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CHECK SKIP FLAG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET SKIP FLAG",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GET LOAD ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('V_SKIP_PRCS'),'0')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RUN_PCS_COMMON_VALIDATE",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "30_PCS_COMMON_VALIDATE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PRCS_NM": {
												"value": "@pipeline().parameters.P_PRCS_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_LD_ID": {
												"value": "@variables('V_LD_ID')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LOAD ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "START PROCESS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_LD_ID",
							"value": {
								"value": "@activity('START PROCESS').output.FIRSTROW.LD_ID",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_STREM_ID": {
						"type": "string",
						"defaultValue": "-999"
					}
				},
				"variables": {
					"V_SKIP_PRCS": {
						"type": "String",
						"defaultValue": "999"
					},
					"V_LD_ID": {
						"type": "String",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:12:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/30_PCS_COMMON_VALIDATE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PCS_COMMON_VALIDATE_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHECK STREAM INFORMATION",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET PROCESS INFORMATION').output.firstrow.CHECK_STREAM_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_LTST_PCS]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_DPND_PCS]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@activity('GET PROCESS INFORMATION').output.firstrow.AS_AT_DT",
											"type": "Expression"
										}
									},
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "STREAM NOT AVAILABLE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GET RECONCILE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_RECONCILE]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK RECONCILE",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET RECONCILE').output.FIRSTROW.RECONCILE_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK RECONCILE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstrow.CNT_SRC",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstrow.CNT_TGT",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON RECONCILE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstrow.CNT_SRC",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstrow.CNT_TGT",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "RECONCILE FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"description": "1: Call Azure Function\n2: Copy data",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('GET PROCESS INFORMATION').output.firstrow.PCS_TYPE",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "Azure Function1",
											"type": "AzureFunctionActivity",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"functionName": {
													"value": "@activity('GET PROCESS INFORMATION').output.firstRow.FUNC_NM",
													"type": "Expression"
												},
												"method": "POST",
												"headers": {},
												"body": {
													"value": "@activity('GET PROCESS INFORMATION').output.firstRow.PARAM",
													"type": "Expression"
												}
											},
											"linkedServiceName": {
												"referenceName": "link_func_edp",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "EDW UPDATE COUNT TARGET",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "Azure Function1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
												"storedProcedureParameters": {
													"P_CNT_SRC": {
														"value": null,
														"type": "String"
													},
													"P_CNT_TGT": {
														"value": null,
														"type": "String"
													},
													"P_LOAD_ID": {
														"value": {
															"value": "@pipeline().parameters.P_LOAD_ID",
															"type": "Expression"
														},
														"type": "String"
													},
													"P_PCS_NM": {
														"value": {
															"value": "@pipeline().parameters.P_PCS_NM",
															"type": "Expression"
														},
														"type": "String"
													},
													"P_RMRK": {
														"value": null,
														"type": "String"
													},
													"P_ST": {
														"value": "START",
														"type": "String"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "link_sqldb_kkpb_edp",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "PCS_COMMON_COPY",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE2",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_LOAD_ID": {
						"type": "string",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/linkedServices/link_func_edp')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/30_PCS_COMMON_VALIDATE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "CHECK STREAM INFORMATION",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET PROCESS INFORMATION').output.firstrow.CHK_STREM_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_LTST_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_LD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LD_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "STREAM NOT AVAILABLE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GET RECONCILE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_RCNCL]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_LD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LD_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK RECONCILE",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET RECONCILE').output.FIRSTROW.RCNCL_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK RECONCILE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON RECONCILE",
						"description": " ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstRow.ERR_MSG",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"description": "1: Call Azure Function\n2: Copy data",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "CHECK DNDP_FINAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('GET PROCESS INFORMATION').output.firstrow.PRCS_TYPE",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "Execute Pipeline Type 1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE1",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "Execute Pipeline Type 2",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE2",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "Execute Pipeline Type 3",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE3",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "4",
									"activities": [
										{
											"name": "Execute Pipeline Type 4",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE4",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "5",
									"activities": [
										{
											"name": "Execute Pipeline Type 5",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE5",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "6",
									"activities": [
										{
											"name": "Execute Pipeline Type 6",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE6",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "7",
									"activities": [
										{
											"name": "Execute Pipeline Type 7",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE7",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "9",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE9",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE9",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "10",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE10",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE10",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@OR(equals(variables('V_DPDN_FLG'),'Y'), equals(variables('V_DPDN_FLG'),'N'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": {
												"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_DPND_PRCS]')",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"P_DATA_DT": {
													"type": "String",
													"value": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow.DATA_DT",
														"type": "Expression"
													}
												},
												"P_LD_ID": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													}
												},
												"P_PRCS_NM": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "CHECK DNDP",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GET DNDP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											},
											{
												"name": "Set variable1_copy1",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Wait1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "V_TMP",
													"value": {
														"value": "@variables('V_LOOP')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set variable2",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set variable1_copy1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "V_LOOP",
													"value": {
														"value": "@string(ADD(int(variables('V_TMP')),300))",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "V_DPDN_FLG",
													"value": "Y"
												}
											}
										]
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "CHECK DNDP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(Int(variables('V_LOOP')),3600)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable3",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "V_DPDN_FLG",
													"value": "N"
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "CHECK DNDP_FINAL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('V_DPDN_FLG'),'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP_copy1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "999"
					}
				},
				"variables": {
					"V_DPDN_FLG": {
						"type": "String",
						"defaultValue": "N/A"
					},
					"V_TMP": {
						"type": "String",
						"defaultValue": "0"
					},
					"V_LOOP": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE1')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE2')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE3')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE4')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE5')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE6')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE7')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE9')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE10')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/30_PCS_COMMON_VALIDATE_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHECK STREAM INFORMATION",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET PROCESS INFORMATION').output.firstrow.CHECK_STREAM_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_LTST_PCS]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_DPND_PCS]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@activity('GET PROCESS INFORMATION').output.firstrow.AS_AT_DT",
											"type": "Expression"
										}
									},
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "STREAM NOT AVAILABLE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GET RECONCILE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_RECONCILE]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK RECONCILE",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET RECONCILE').output.FIRSTROW.RECONCILE_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK RECONCILE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON RECONCILE",
						"description": " ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstRow.ERR_MSG",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"description": "1: Call Azure Function\n2: Copy data",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('GET PROCESS INFORMATION').output.firstrow.PCS_TYPE",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE1",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "PCS_COMMON_TYPE2",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE2",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE3",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE3",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "4",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE4",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE4",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "5",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE5",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE5",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_LOAD_ID": {
						"type": "string",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE1')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE2')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE3')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE4')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/30_PCS_COMMON_VALIDATE_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHECK STREAM INFORMATION",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET PROCESS INFORMATION').output.firstrow.CHK_STREM_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_LTST_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_LD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LD_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_DPND_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@activity('GET PROCESS INFORMATION').output.firstrow.DATA_DT",
											"type": "Expression"
										}
									},
									"P_LD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LD_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "STREAM NOT AVAILABLE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GET RECONCILE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_RCNCL]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_LD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LD_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK RECONCILE",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET RECONCILE').output.FIRSTROW.RCNCL_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK RECONCILE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON RECONCILE",
						"description": " ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstRow.ERR_MSG",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"description": "1: Call Azure Function\n2: Copy data",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('GET PROCESS INFORMATION').output.firstrow.PRCS_TYPE",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "Execute Pipeline Type 1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE1",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "Execute Pipeline Type 2",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE2",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "Execute Pipeline Type 3",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE3",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "4",
									"activities": [
										{
											"name": "Execute Pipeline Type 4",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE4",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "5",
									"activities": [
										{
											"name": "Execute Pipeline Type 5",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE5",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "6",
									"activities": [
										{
											"name": "Execute Pipeline Type 6",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE6",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "7",
									"activities": [
										{
											"name": "Execute Pipeline Type 7",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE7",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "9",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE9",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE9",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE1')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE2')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE3')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE4')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE5')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE6')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE7')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load from external website to STG",
				"activities": [
					{
						"name": "Azure Function1",
						"description": "  ",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@pipeline().parameters.P_PRCS_OBJ.FUNC_NM",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@pipeline().parameters.P_PRCS_OBJ.FUNC_PARM",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "link_func_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EDW UPDATE COUNT TARGET",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Azure Function1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": {
										"value": "@activity('Azure Function1').output.NumberOfFiles",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": {
										"value": "@activity('Azure Function1').output.NumberOfFiles",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": {
										"value": "@if(and(equals(activity('Azure Function1').output.statusCode, 200),equals(activity('Azure Function1').output.NumberOfFiles,  0)),'File not found','')",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_ST": {
									"value": "RUNNING",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "EDW UPDATE COUNT TARGET",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.P_PRCS_OBJ.ADB_NM,null))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_NM",
											"type": "Expression"
										},
										"baseParameters": {
											"PARAMS": {
												"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_PARM",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string"
					},
					"P_PRCS_NM": {
						"type": "string"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_func_edp')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE10')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy excel from sharepoints to ref",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('GetBearerToken').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sp_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"ServerRelativeUrl": {
										"value": "@concat('/sites/',pipeline().globalParameters.P_GLBL_SHAREPOINT_SITE,'/ShareCenter/Landing/', pipeline().parameters.P_PRCS_OBJ.PTH, '/', activity('Lookup1').output.firstrow.FI_NM)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds2",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output.firstRow",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_xlsx_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONATINER": {
										"value": "@activity('Lookup1').output.firstrow.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH,'/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									},
									"P_SHEET": {
										"value": "@activity('Lookup1').output.firstrow.SHT_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Update Log Count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Copy STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": {
										"value": "@activity('Copy STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Copy to Staging",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetBearerToken",
						"description": "  ",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().globalParameters.P_GLBL_BEARER_TOKEN",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=8578d84d-db28-449a-9c11-a8bae5465c04@9fce0284-1a8c-4368-85b0-571bbad0df08&client_secret=mVbWh~igL5kKkzFVXEg6BLOw86--_G4.cd&resource=00000003-0000-0ff1-ce00-000000000000/kiatnakin365.sharepoint.com@9fce0284-1a8c-4368-85b0-571bbad0df08"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:50:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sp_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds2')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_xlsx_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_json_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE1_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@pipeline().parameters.P_PCS_OBJ.FUNC_NM",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@pipeline().parameters.P_PCS_OBJ.FUNC_PARAMS",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "link_func_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EDW UPDATE COUNT TARGET",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Azure Function1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": {
										"value": "@activity('Azure Function1').output.NumberOfFiles",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": {
										"value": "@activity('Azure Function1').output.NumberOfFiles",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "",
									"type": "String"
								},
								"P_ST": {
									"value": "RUNNING",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "EDW UPDATE COUNT TARGET",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.P_PCS_OBJ.ADB_NM,null))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.P_PCS_OBJ.ADB_NM",
											"type": "Expression"
										},
										"baseParameters": {
											"PARAMS": {
												"value": "@pipeline().parameters.P_PCS_OBJ.ADB_PARAMS",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_LOAD_ID": {
						"type": "string"
					},
					"P_PCS_NM": {
						"type": "string"
					},
					"P_PCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_func_edp')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load text data from On-prim to STG",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"description": "  ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Preprocessing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-adf-preprocessing",
							"baseParameters": {
								"PARAMS": {
									"value": "@activity('Lookup1').output.firstrow.PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Preprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Preprocessing').output.runOutput.Status,'Success')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Update Fail Process",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Update Fail Process",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_CNT_FI_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_FI_TGT": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_SRC": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.ActualRecord",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_CNT_REC_TGT": {
												"value": null,
												"type": "String"
											},
											"P_LD_ID": {
												"value": {
													"value": "@pipeline().parameters.P_LD_ID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_PRCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PRCS_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.Description",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_ST": {
												"value": "Failed",
												"type": "String"
											},
											"P_CNT_REC_CNTL": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.ExpectedRecord",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy STG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update Log Count Preprocess",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "link_st_kkpb_edp",
													"type": "LinkedServiceReference"
												},
												"path": "logs/ADF"
											}
										},
										"translator": {
											"value": "@activity('Lookup Schema').output.firstRow",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "dl_csv_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_PATH": "TMP/SOURCE/",
												"P_FILENAME": {
													"value": "@replace(activity('Lookup1').output.firstrow.SCHM_FI,'.json', '.txt')",
													"type": "Expression"
												},
												"P_DELIMITER": {
													"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
													"type": "Expression"
												},
												"P_ENCODING": {
													"value": "@activity('Lookup1').output.firstrow.ENCDNG",
													"type": "Expression"
												},
												"P_FIRSTROW_HDR": "Y",
												"P_CONTAINER": "working"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dl_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_CONTAINER": {
													"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
													"type": "Expression"
												},
												"P_PATH": {
													"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH,'/', pipeline().parameters.P_PRCS_OBJ.TGT_TBL, '/DATA_DT=', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
													"type": "Expression"
												},
												"P_FILENAME": {
													"value": "@concat(activity('Lookup1').output.firstrow.FI_NM)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Log Count",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_CNT_FI_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_FI_TGT": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_TGT": {
												"value": {
													"value": "@activity('Copy STG').output.rowsCopied",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_LD_ID": {
												"value": {
													"value": "@pipeline().parameters.P_LD_ID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_PRCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PRCS_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": null,
												"type": "String"
											},
											"P_ST": {
												"value": "Running",
												"type": "String"
											},
											"P_CNT_REC_CNTL": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Update Log Count Preprocess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_CNT_FI_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_FI_TGT": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_SRC": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.ActualRecord",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_CNT_REC_TGT": {
												"value": null,
												"type": "String"
											},
											"P_LD_ID": {
												"value": {
													"value": "@pipeline().parameters.P_LD_ID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_PRCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PRCS_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": null,
												"type": "String"
											},
											"P_ST": {
												"value": "Running",
												"type": "String"
											},
											"P_CNT_REC_CNTL": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.ExpectedRecord",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_json_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_csv_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE2_INIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load text data from On-prim to STG",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(activity('GET PROCESS INFORMATION').output.FIRSTROW.PTH, '/', activity('GET PROCESS INFORMATION').output.FIRSTROW.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(activity('GET PROCESS INFORMATION').output.FIRSTROW.PTH, '/', activity('GET PROCESS INFORMATION').output.FIRSTROW.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"description": "  ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "link_st_kkpb_edp",
										"type": "LinkedServiceReference"
									},
									"path": "logs/ADF"
								}
							},
							"translator": {
								"value": "@activity('Lookup Schema').output.firstRow",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(activity('GET PROCESS INFORMATION').output.FIRSTROW.PTH, '/', activity('GET PROCESS INFORMATION').output.FIRSTROW.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									},
									"P_DELIMITER": {
										"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
										"type": "Expression"
									},
									"P_ENCODING": {
										"value": "@activity('Lookup1').output.firstrow.ENCDNG",
										"type": "Expression"
									},
									"P_FIRSTROW_HDR": "Y",
									"P_CONTAINER": {
										"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW.CNTNR",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW.TGT_CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(activity('GET PROCESS INFORMATION').output.FIRSTROW.TGT_PTH,'/', activity('GET PROCESS INFORMATION').output.FIRSTROW.TGT_TBL, '/DATA_DT=', activity('GET PROCESS INFORMATION').output.FIRSTROW.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@concat(activity('Lookup1').output.firstrow.FI_NM)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "T1_HP_CONTRACT_MASTER_D_99"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_json_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_csv_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE2_copy3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load text data from On-prim to STG",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Preprocessing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-adf-preprocessing",
							"baseParameters": {
								"PARAMS": {
									"value": "@activity('Lookup1').output.firstrow.PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Update Log Count Preprocess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Preprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.ActualRecord",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.ExpectedRecord",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Update Log Count Preprocess",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Preprocessing').output.StatusRecord,'Success')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy STG",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@activity('Lookup Schema').output",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "dl_csv_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_PATH": "TMP/SOURCE/",
												"P_FILENAME": {
													"value": "@activity('Lookup1').output.firstrow.FI_NM",
													"type": "Expression"
												},
												"P_DELIMITER": {
													"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
													"type": "Expression"
												},
												"P_ENCODING": {
													"value": "@activity('Lookup1').output.firstrow.ENCDNG",
													"type": "Expression"
												},
												"P_FIRSTROW_HDR": "Y",
												"P_CONTAINER": "working"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dl_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_CONTAINER": {
													"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
													"type": "Expression"
												},
												"P_PATH": {
													"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH,'/', pipeline().parameters.P_PRCS_OBJ.TGT_TBL, '/DATA_DT=', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
													"type": "Expression"
												},
												"P_FILENAME": {
													"value": "@concat(activity('Lookup1').output.firstrow.FI_NM)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Log Count",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_CNT_FI_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_FI_TGT": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_TGT": {
												"value": {
													"value": "@activity('Copy STG').output.rowsCopied",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_LD_ID": {
												"value": {
													"value": "@pipeline().parameters.P_LD_ID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_PRCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PRCS_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": null,
												"type": "String"
											},
											"P_ST": {
												"value": "Running",
												"type": "String"
											},
											"P_CNT_REC_CNTL": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_json_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_csv_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE2_copy4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load text data from On-prim to STG",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Preprocessing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-adf-preprocessing",
							"baseParameters": {
								"PARAMS": {
									"value": "@activity('Lookup1').output.firstrow.PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Preprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Preprocessing').output.runOutput.Status,'Success')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy STG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update Log Count Preprocess",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@activity('Lookup Schema').output.firstRow",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "dl_csv_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_PATH": "TMP/SOURCE/",
												"P_FILENAME": {
													"value": "@replace(activity('Lookup1').output.firstrow.SCHM_FI,'.json', '.txt')",
													"type": "Expression"
												},
												"P_DELIMITER": {
													"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
													"type": "Expression"
												},
												"P_ENCODING": {
													"value": "@activity('Lookup1').output.firstrow.ENCDNG",
													"type": "Expression"
												},
												"P_FIRSTROW_HDR": "Y",
												"P_CONTAINER": "working"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dl_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_CONTAINER": {
													"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
													"type": "Expression"
												},
												"P_PATH": {
													"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH,'/', pipeline().parameters.P_PRCS_OBJ.TGT_TBL, '/DATA_DT=', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
													"type": "Expression"
												},
												"P_FILENAME": {
													"value": "@concat(activity('Lookup1').output.firstrow.FI_NM)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Log Count",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_CNT_FI_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_FI_TGT": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_TGT": {
												"value": {
													"value": "@activity('Copy STG').output.rowsCopied",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_LD_ID": {
												"value": {
													"value": "@pipeline().parameters.P_LD_ID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_PRCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PRCS_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": null,
												"type": "String"
											},
											"P_ST": {
												"value": "Running",
												"type": "String"
											},
											"P_CNT_REC_CNTL": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Update Log Count Preprocess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"P_CNT_FI_SRC": {
												"value": null,
												"type": "String"
											},
											"P_CNT_FI_TGT": {
												"value": null,
												"type": "String"
											},
											"P_CNT_REC_SRC": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.ActualRecord",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_CNT_REC_TGT": {
												"value": null,
												"type": "String"
											},
											"P_LD_ID": {
												"value": {
													"value": "@pipeline().parameters.P_LD_ID",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_PRCS_NM": {
												"value": {
													"value": "@pipeline().parameters.P_PRCS_NM",
													"type": "Expression"
												},
												"type": "String"
											},
											"P_RMRK": {
												"value": null,
												"type": "String"
											},
											"P_ST": {
												"value": "Running",
												"type": "String"
											},
											"P_CNT_REC_CNTL": {
												"value": {
													"value": "@activity('Preprocessing').output.runOutput.ExpectedRecord",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_sqldb_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Copy to Curated",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Update Log Count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_NM",
											"type": "Expression"
										},
										"baseParameters": {
											"PARAMS": {
												"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_PARM",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Update Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.ActualRecord",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.Description",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_ST": {
									"value": "Failed",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.ExpectedRecord",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_json_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_csv_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Transform via databricks ",
				"activities": [
					{
						"name": "Notebook1",
						"description": "  ",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_NM",
								"type": "Expression"
							},
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string"
					},
					"P_PRCS_NM": {
						"type": "string"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy binary on-prim to STG",
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_NM",
								"type": "Expression"
							},
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "bin_blob_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"description": "  ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string"
					},
					"P_PRCS_NM": {
						"type": "string"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]",
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/bin_blob_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE4_bk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.P_PCS_OBJ.ADB_NM",
								"type": "Expression"
							},
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.P_PCS_OBJ.ADB_PARAMS",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_LOAD_ID": {
						"type": "string"
					},
					"P_PCS_NM": {
						"type": "string"
					},
					"P_PCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy binary sharepoints to STG",
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_NM",
								"type": "Expression"
							},
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup1",
						"description": "  ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('GetBearerToken').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sp_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"ServerRelativeUrl": {
										"value": "@concat('/sites/',pipeline().globalParameters.P_GLBL_SHAREPOINT_SITE,'/ShareCenter/Landing/', pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT, '/', activity('Lookup1').output.firstrow.FI_NM)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds2",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GetBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().globalParameters.P_GLBL_BEARER_TOKEN",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=8578d84d-db28-449a-9c11-a8bae5465c04@9fce0284-1a8c-4368-85b0-571bbad0df08&client_secret=mVbWh~igL5kKkzFVXEg6BLOw86--_G4.cd&resource=00000003-0000-0ff1-ce00-000000000000/kiatnakin365.sharepoint.com@9fce0284-1a8c-4368-85b0-571bbad0df08"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string"
					},
					"P_PRCS_NM": {
						"type": "string"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/sp_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE5_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EDW UPDATE COUNT TARGET",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[COMMOM_SNAPSHOT_PROCESS]",
							"storedProcedureParameters": {
								"P_AS_AT_DT": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_OBJ.asat_dt",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_ID": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_OBJ.pcs_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_TABLE_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_OBJ.table_name",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_TXN_V_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_OBJ.view_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_syn_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_LOAD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_syn_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy binary sharepoints by folder to STG",
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_NM",
								"type": "Expression"
							},
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetBearerToken",
						"description": "  ",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().globalParameters.P_GLBL_BEARER_TOKEN",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=8578d84d-db28-449a-9c11-a8bae5465c04@9fce0284-1a8c-4368-85b0-571bbad0df08&client_secret=mVbWh~igL5kKkzFVXEg6BLOw86--_G4.cd&resource=00000003-0000-0ff1-ce00-000000000000/kiatnakin365.sharepoint.com@9fce0284-1a8c-4368-85b0-571bbad0df08"
						}
					},
					{
						"name": "List file in path",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://kiatnakin365.sharepoint.com/sites/',pipeline().globalParameters.P_GLBL_SHAREPOINT_SITE,'/_api/web/GetFolderByServerRelativeUrl(''ShareCenter/Landing/', pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT, ''')/Files')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Accept": "application/json;odata=verbose",
								"Authorization": {
									"value": "@{concat('Bearer ', activity('GetBearerToken').output.access_token)}",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List file in path",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List file in path').output.d.results",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy Raw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization: Bearer ', activity('GetBearerToken').output.access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "sp_bin_ds",
											"type": "DatasetReference",
											"parameters": {
												"ServerRelativeUrl": {
													"value": "@item().ServerRelativeUrl",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dl_bin_ds2",
											"type": "DatasetReference",
											"parameters": {
												"P_CONTAINER": {
													"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
													"type": "Expression"
												},
												"P_PATH": {
													"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
													"type": "Expression"
												},
												"P_FILENAME": {
													"value": "@item().Name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string"
					},
					"P_PRCS_NM": {
						"type": "string"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:23:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]",
				"[concat(variables('factoryId'), '/datasets/sp_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE6_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/39f31ac1-7170-4ce0-9582-ca6a8312bb55/resourceGroups/rg-kkpb-test-edp/providers/Microsoft.DataFactory/factories/adf-kkpb-dev-edp/pipelines/RIB_EXT_TABLE/createRun?api-version=2018-06-01",
							"method": "POST",
							"headers": {},
							"body": {
								"lastUpdatedAfter": "2018-06-16T00:36:44.3345758Z",
								"lastUpdatedBefore": "2018-06-16T00:49:48.3686473Z"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					}
				],
				"parameters": {
					"P_LOAD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy text from sharepoints to ref",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('GetBearerToken').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sp_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"ServerRelativeUrl": {
										"value": "@concat('/sites/',pipeline().globalParameters.P_GLBL_SHAREPOINT_SITE,'/ShareCenter/Landing/', pipeline().parameters.P_PRCS_OBJ.PTH, '/', activity('Lookup1').output.firstrow.FI_NM)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds2",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output.firstRow",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH,'/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									},
									"P_DELIMITER": {
										"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
										"type": "Expression"
									},
									"P_ENCODING": {
										"value": "@activity('Lookup1').output.firstrow.ENCDNG",
										"type": "Expression"
									},
									"P_FIRSTROW_HDR": {
										"value": "@activity('Lookup1').output.firstrow.FRST_ROW_HD",
										"type": "Expression"
									},
									"P_CONTAINER": {
										"value": "@activity('Lookup1').output.firstrow.CNTNR",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Update Log Count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Copy STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": {
										"value": "@activity('Copy STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Copy to Staging",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetBearerToken",
						"description": "  ",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().globalParameters.P_GLBL_BEARER_TOKEN",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=8578d84d-db28-449a-9c11-a8bae5465c04@9fce0284-1a8c-4368-85b0-571bbad0df08&client_secret=mVbWh~igL5kKkzFVXEg6BLOw86--_G4.cd&resource=00000003-0000-0ff1-ce00-000000000000/kiatnakin365.sharepoint.com@9fce0284-1a8c-4368-85b0-571bbad0df08"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:50:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sp_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds2')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_csv_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_json_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Reference file from On-prim",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"description": "  ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output.firstRow",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH,'/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									},
									"P_DELIMITER": {
										"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
										"type": "Expression"
									},
									"P_ENCODING": {
										"value": "@activity('Lookup1').output.firstrow.ENCDNG",
										"type": "Expression"
									},
									"P_FIRSTROW_HDR": {
										"value": "@activity('Lookup1').output.firstrow.FRST_ROW_HD",
										"type": "Expression"
									},
									"P_CONTAINER": {
										"value": "@activity('Lookup1').output.firstrow.CNTNR",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Update Log Count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Copy STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": {
										"value": "@activity('Copy STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Copy to Staging",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:25:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_csv_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_json_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "External Table Creation",
				"activities": [
					{
						"name": "If Condition1",
						"description": "  ",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.P_PRCS_OBJ.STREM_NM,'EDP_RIB_CR')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "EXT_TABLE",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "EXT_TABLE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_STREAM": {
												"value": "@pipeline().parameters.P_PRCS_OBJ.STREM_NM",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "RIB_EXT_TABLE",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "RIB_EXT_TABLE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:25:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/EXT_TABLE')]",
				"[concat(variables('factoryId'), '/pipelines/RIB_EXT_TABLE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/99_EMAIL_FINAL_RESULT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STREAM RESULT",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_BATCH_RSLT')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@activity('START STREAM').output.FIRSTROW.DATA_DT",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "SEND EMAIL",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "UPDATE STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-11.southeastasia.logic.azure.com:443/workflows/0c8fc5c0ef894032905ccf103cbe04a7/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=agmp-_JAWWQboJJN9WzVGHrl7MuFv6UUDPuhdqhiqAM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n\"Message\":\"@{activity('STREAM RESULT').output.firstrow.RESULT_SET}\",\n\"EmailTo\":\"@{activity('GET EMAIL').output.firstrow.EMAIL}\",\n\"Data_dt\":\"@{activity('START STREAM').output.firstrow.DATA_DT}\",\n\"StreamName\":\"All\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET EMAIL",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "START STREAM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_GET_EMAIL')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									},
									"P_STREM_RSLT": {
										"type": "String",
										"value": "SUCCESS"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "START STREAM",
						"description": "           ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_STRT_STREM')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREM_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREM_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GET EMAIL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "STREAM RESULT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.PROC_UPDT_STREM')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_STREM_NM": {
									"value": {
										"value": "@pipeline().parameters.P_STREM_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_STREM_RSLT": {
									"value": "FINISH",
									"type": "String"
								},
								"P_STREM_ID": {
									"value": {
										"value": "@activity('START STREAM').output.FIRSTROW.STREM_ID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_STREM_NM": {
						"type": "string",
						"defaultValue": "EDP_FINAL"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@replace(activity('Lookup1').output.firstrow.prop_0,'%DATA_DT%',activity('Lookup2').output.firstrow.DATA_DT)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "dl_sql_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_FILEPATH": {
													"value": "@concat('TMP/STOREDSCRIPT/',pipeline().parameters.P_STREAM)",
													"type": "Expression"
												},
												"P_FILENAME": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dl_work_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILEPATH": {
										"value": "@concat('TMP/STOREDSCRIPT/',pipeline().parameters.P_STREAM)",
										"type": "Expression"
									},
									"P_FILENAME": "*.*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT  CONVERT(VARCHAR, [CALC_DATA_DT], 112) AS DATA_DT FROM ',pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.[CNTL_CFG_STREM] WHERE STREM_NM = ''' , pipeline().parameters.P_STREAM, '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_STREAM": {
						"type": "string"
					}
				},
				"variables": {
					"p_file": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UTILS"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dl_work_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_syn_kkpb_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oak_test2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/39f31ac1-7170-4ce0-9582-ca6a8312bb55/resourceGroups/rg-kkpb-test-edp/providers/Microsoft.DataFactory/factories/adf-kkpb-dev-edp/pipelines/testAPI/createRun?api-version=2018-06-01",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"lastUpdatedAfter": "2018-06-16T00:36:44.3345758Z",
								"lastUpdatedBefore": "2018-06-16T00:49:48.3686473Z"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					}
				],
				"variables": {
					"subscriptionId": {
						"type": "String",
						"defaultValue": "39f31ac1-7170-4ce0-9582-ca6a8312bb55"
					},
					"resourceGroupName": {
						"type": "String",
						"defaultValue": "rg-kkpb-test-edp"
					},
					"factoryName": {
						"type": "String",
						"defaultValue": "adf-kkpb-dev-edp"
					},
					"pipelineName": {
						"type": "String",
						"defaultValue": "00_STREAM_COMMON"
					},
					"apiVersion": {
						"type": "String",
						"defaultValue": "2018-06-01"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T10:43:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RIB_EXT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook2",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/00_Common/edp/adf/dbn-gen-script-rib",
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.PARAMS",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Notebook2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
							"storedProcedureParameters": {
								"SQL": {
									"value": {
										"value": "@activity('Notebook2').output.runOutput",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_syn_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"PARAMS": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]",
				"[concat(variables('factoryId'), '/linkedServices/link_syn_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RIB_EXT_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-folder-rib"
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_work_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILEPATH": "TMP/RIBFOLDER",
									"P_FILENAME": "ribFolders.txt"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "kkpmobile-req-for",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "kkpmobile-request",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('kkpmobile-request').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "kkpmobile-req-db",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-script-rib",
										"baseParameters": {
											"PARAMS": {
												"value": "@concat(item().Prop_0,'^|',item().Prop_1,'^|',item().Prop_2)\n",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "kkpmobile-req-sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "kkpmobile-req-db",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@activity('kkpmobile-req-db').output.runOutput",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Notebook2_copy1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-compare-folder-rib"
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SEND EMAIL",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Notebook2_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-05.southeastasia.logic.azure.com:443/workflows/87cb500b80b74094a5bea5f149f3b45a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=U4UdfX5WK2SF1bQKwro9Wmujq8RKOiGaTvcvclI17pw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@concat('{\"Message\": \"',activity('Notebook2_copy1').output.runOutput.RESULT_SET,'\",\"EmailTo\":\"pran.inteltion@gmail.com\",\n}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "kkpmobile-request",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Prop_0,'kkp-kkpmobile-tracking-request')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "kkpmobile-res-for",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "kkpmobile-response",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('kkpmobile-response').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "kkpmobile-res-db",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-script-rib",
										"baseParameters": {
											"PARAMS": {
												"value": "@concat(item().Prop_0,'^|',item().Prop_1,'^|',item().Prop_2)\n",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "kkpmobile-res-sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "kkpmobile-res-db",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@activity('kkpmobile-res-db').output.runOutput",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "kkpmobile-response",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Prop_0,'kkp-kkpmobile-tracking-response')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ribmobile-req",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ribmobile-request",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ribmobile-request').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "ribmobile-req-db",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-script-rib",
										"baseParameters": {
											"PARAMS": {
												"value": "@concat(item().Prop_0,'^|',item().Prop_1,'^|',item().Prop_2)\n",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "rib-mobile-req-sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ribmobile-req-db",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@activity('ribmobile-req-db').output.runOutput",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "ribmobile-request",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Prop_0,'kkp-ribmobile-tracking-request')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ribmobile-res",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ribmobile-response",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ribmobile-response').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 35,
							"activities": [
								{
									"name": "ribmobile-res-db",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-script-rib",
										"baseParameters": {
											"PARAMS": {
												"value": "@concat(item().Prop_0,'^|',item().Prop_1,'^|',item().Prop_2)\n",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ribmobile-res-sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ribmobile-res-db",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@activity('ribmobile-res-db').output.runOutput",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "ribmobile-response",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Prop_0,'kkp-ribmobile-tracking-response')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ribpibweb-req",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ribpibweb-request",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ribpibweb-request').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "ribpibweb-req-db",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-script-rib",
										"baseParameters": {
											"PARAMS": {
												"value": "@concat(item().Prop_0,'^|',item().Prop_1,'^|',item().Prop_2)\n",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ribpibweb-req-sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ribpibweb-req-db",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@activity('ribpibweb-req-db').output.runOutput",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "ribpibweb-request",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Prop_0,'kkp-ribpibweb-tracking-request')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ribpibweb-res",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ribpibweb-response",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ribpibweb-response').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "ribpibweb-res-db",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-script-rib",
										"baseParameters": {
											"PARAMS": {
												"value": "@concat(item().Prop_0,'^|',item().Prop_1,'^|',item().Prop_2)\n",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ribpibweb-res-sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ribpibweb-res-db",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@activity('ribpibweb-res-db').output.runOutput",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "ribpibweb-response",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Prop_0,'kkp-ribpibweb-tracking-request')",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "UTILS"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]",
				"[concat(variables('factoryId'), '/datasets/dl_work_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/link_syn_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN_INITIAL_LOOP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RUN_LOOP",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('V_DATA_DT'), '20110310')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "00_STREAM_COMMON",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "00_STREAM_COMMON_2_bk",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_STREM_NM": {
												"value": "@pipeline().parameters.P_STREAM_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": "N"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "00_STREAM_COMMON",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT  CONVERT(VARCHAR, [CALC_DATA_DT], 112) AS DATA_DT FROM ',pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.[CNTL_CFG_STREM] WHERE STREM_NM = ''' , pipeline().parameters.P_STREAM_NM, '''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_DATA_DT",
										"value": {
											"value": "@activity('Lookup1').output.firstrow.data_dt",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"parameters": {
					"P_STREAM_NM": {
						"type": "string"
					}
				},
				"variables": {
					"V_DATA_DT": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/00_STREAM_COMMON_2_bk')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST SHAREPOINTS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy sharepoints to ref",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('GetBearerToken').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sp_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"ServerRelativeUrl": "/sites/EDPFileCenterUAT/ShareCenter/Landing/internal/manualfile/real_estate/20201231/BMR_202012.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().globalParameters.P_GLBL_BEARER_TOKEN",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=8578d84d-db28-449a-9c11-a8bae5465c04@9fce0284-1a8c-4368-85b0-571bbad0df08&client_secret=mVbWh~igL5kKkzFVXEg6BLOw86--_G4.cd&resource=00000003-0000-0ff1-ce00-000000000000/kiatnakin365.sharepoint.com@9fce0284-1a8c-4368-85b0-571bbad0df08"
						}
					}
				],
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-25T03:32:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sp_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST SHAREPOINTS_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy sharepoints to ref",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('GetBearerToken').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sp_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"ServerRelativeUrl": "/sites/EDPFileCenterUAT/ShareCenter/Landing/internal/manualfile/real_estate/RE_Code_Zone_Mapping.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().globalParameters.P_GLBL_BEARER_TOKEN",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=8578d84d-db28-449a-9c11-a8bae5465c04@9fce0284-1a8c-4368-85b0-571bbad0df08&client_secret=mVbWh~igL5kKkzFVXEg6BLOw86--_G4.cd&resource=00000003-0000-0ff1-ce00-000000000000/kiatnakin365.sharepoint.com@9fce0284-1a8c-4368-85b0-571bbad0df08"
						}
					}
				],
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-25T03:32:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sp_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_bin_ds3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_JDBC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pran.piya@kkpfg.com/TEST/TEST ADF SYN"
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test DBW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pran@inteltion.com/tes",
							"baseParameters": {
								"Date": "20210115",
								"Source": "kkp-kkpmobile-tracking-request"
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_dbw_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test FIlter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_work_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILEPATH": "TMP/RIBFOLDER",
									"P_FILENAME": "ribFolders.txt"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Prop_0,'kkp-kkpmobile-tracking-request')",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dl_work_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFolderPath": "TEST",
									"wildcardFileName": "*.*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "bin_onprim_ds_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "bin_blob_ds_copy1",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": "raw",
									"P_PATH": "TEST/20201231"
								}
							}
						]
					}
				],
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bin_onprim_ds_copy1')]",
				"[concat(variables('factoryId'), '/datasets/bin_blob_ds_copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RECORD_INDICATOR",
											"type": "String"
										},
										"sink": {
											"name": "RECORD_INDICATOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATA_DT",
											"type": "Double",
											"format": "MM/dd/yyyy hh:mm:ss"
										},
										"sink": {
											"name": "DATA_DT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATA_DT2",
											"type": "DateTime",
											"format": "yyyyMMdd"
										},
										"sink": {
											"name": "DATA_DT2",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds_test",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": "TMP/SOURCE/",
									"P_FILENAME": "TEST.txt",
									"P_CONTAINER": "working"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": "working",
									"P_PATH": "TMP/SOURCE/",
									"P_FILENAME": "TEST.parquet"
								}
							}
						]
					}
				],
				"parameters": {
					"P_SCHEMA": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dl_csv_ds_test')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output.firstRow",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": "TMP/SOURCE/",
									"P_FILENAME": "TEST.txt",
									"P_DELIMITER": "|",
									"P_ENCODING": "UTF-8",
									"P_FIRSTROW_HDR": "Y",
									"P_CONTAINER": "working"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": "working",
									"P_PATH": "TMP/SOURCE",
									"P_FILENAME": "TEST.parquet"
								}
							}
						]
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": "TEST.json"
								}
							}
						}
					}
				],
				"parameters": {
					"P_SCHEMA": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dl_csv_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_json_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "00_STREAM_COMMON",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "00_STREAM_COMMON_2_bk",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_STREM_NM": "EDP_SET",
								"P_RUN_MODE": "R"
							}
						}
					},
					{
						"name": "00_STREAM_COMMON1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "00_STREAM_COMMON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "00_STREAM_COMMON_2_bk",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_STREM_NM": "EDP_SET_CR",
								"P_RUN_MODE": "R"
							}
						}
					}
				],
				"folder": {
					"name": "UTILS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/00_STREAM_COMMON_2_bk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  STREM_NM  FROM  CNTL.CNTL_CFG_STREM",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_csv_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test.csv",
						"folderPath": "test",
						"fileSystem": "working"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bin_adls_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_CONTAINER": {
						"type": "string"
					},
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bin_blob_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_adls_onprim_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_CONTAINER": {
						"type": "string"
					},
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_adls_onprim_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bin_blob_ds_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_adls_onprim_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_CONTAINER": {
						"type": "string"
					},
					"P_PATH": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_adls_onprim_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bin_onprim_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_fs_kkpb_dev_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_fs_kkpb_dev_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bin_onprim_ds_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_fs_kkpb_dev_edp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_fs_kkpb_dev_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_bin_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_adls_onprim_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_CONTAINER": {
						"type": "string"
					},
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_adls_onprim_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_bin_ds2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_CONTAINER": {
						"type": "string"
					},
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_bin_ds3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Korat_202012.xlsx",
						"folderPath": "internal/manualfile/real_estate",
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_csv_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					},
					"P_DELIMITER": {
						"type": "string"
					},
					"P_ENCODING": {
						"type": "string"
					},
					"P_FIRSTROW_HDR": {
						"type": "string"
					},
					"P_CONTAINER": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().P_DELIMITER",
						"type": "Expression"
					},
					"encodingName": {
						"value": "@dataset().P_ENCODING",
						"type": "Expression"
					},
					"escapeChar": "",
					"firstRowAsHeader": {
						"value": "@if(EQUALS(dataset().P_FIRSTROW_HDR,'Y'),TRUE,FALSE)",
						"type": "Expression"
					},
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_csv_ds_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					},
					"P_CONTAINER": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_json_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": "CONFIG",
						"fileSystem": "working"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string"
						},
						"mappings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"source": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"type": {
												"type": "string"
											}
										}
									},
									"sink": {
										"type": "object",
										"properties": {
											"path": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_parquet_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_CONTAINER": {
						"type": "string"
					},
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_FILEPATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_FILEPATH",
							"type": "Expression"
						},
						"fileSystem": "working"
					},
					"columnDelimiter": "#",
					"rowDelimiter": "#",
					"escapeChar": "#",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_work_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_FILEPATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_FILEPATH",
							"type": "Expression"
						},
						"fileSystem": "working"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_xlsx_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_CONATINER": {
						"type": "string"
					},
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					},
					"P_SHEET": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().P_SHEET",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONATINER",
							"type": "Expression"
						}
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_st_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mssql_cntl_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_sqldb_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_sqldb_kkpb_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprim_bin_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_fs_kkpb_dev_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_fs_kkpb_dev_edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sp_bin_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"linkedServiceName": {
					"referenceName": "link_spo_http",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ServerRelativeUrl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/sites/EDPFileCenterUAT/_api/web/GetFileByServerRelativeUrl(''',dataset().ServerRelativeUrl,''')/$value')  ",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_spo_http')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "shir-kkpb-edp",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/shir-kkpb-edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_adls_onprim_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('link_adls_onprim_edp_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('link_adls_onprim_edp_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "shir-onprim-kkbp-edp",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/shir-onprim-kkbp-edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_blob_test_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('link_blob_test_edp_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_dbw_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "   ",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2489353948312455.15.azuredatabricks.net/",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('link_dbw_edp_accessToken')]"
					},
					"existingClusterId": "0324-063910-filet728"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_fs_kkpb_dev_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "  ",
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('link_fs_kkpb_dev_edp_properties_typeProperties_host')]",
					"userId": "[parameters('link_fs_kkpb_dev_edp_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('link_fs_kkpb_dev_edp_password')]"
					}
				},
				"connectVia": {
					"referenceName": "shir-onprim-kkbp-edp",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/shir-onprim-kkbp-edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_func_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "   ",
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('link_func_edp_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('link_func_edp_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "shir-kkpb-edp",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/shir-kkpb-edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_kv_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('link_kv_edp_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_spo_http')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('link_spo_http_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "shir-kkpb-edp",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/shir-kkpb-edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_sqldb_kkpb_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('link_sqldb_kkpb_edp_connectionString')]"
				},
				"connectVia": {
					"referenceName": "shir-kkpb-edp",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/shir-kkpb-edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_st_kkpb_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('link_st_kkpb_edp_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('link_st_kkpb_edp_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "shir-kkpb-edp",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/shir-kkpb-edp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_syn_kkpb_edp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " ",
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('link_syn_kkpb_edp_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/shir-kkpb-edp')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('shir-kkpb-edp_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/shir-onprim-kkbp-edp')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}