{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-kkpb-dev-edp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dl_parquet_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_CONTAINER": {
						"type": "string"
					},
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().P_CONTAINER",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_FILEPATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_FILEPATH",
							"type": "Expression"
						},
						"fileSystem": "working"
					},
					"columnDelimiter": "#",
					"rowDelimiter": "#",
					"escapeChar": "#",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_work_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_st_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_FILEPATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_FILEPATH",
							"type": "Expression"
						},
						"fileSystem": "working"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mssql_cntl_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_sqldb_kkpb_edp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprim_bin_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_fs_kkpb_dev_edp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_PATH": {
						"type": "string"
					},
					"P_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().P_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().P_PATH",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load text data from On-prim to STG",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Preprocessing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-adf-preprocessing",
							"baseParameters": {
								"PARAMS": {
									"value": "@activity('Lookup1').output.firstrow.PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Update Log Count Preprocess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": "TMP/SOURCE/",
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									},
									"P_DELIMITER": {
										"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
										"type": "Expression"
									},
									"P_ENCODING": {
										"value": "@activity('Lookup1').output.firstrow.ENCDNG",
										"type": "Expression"
									},
									"P_FIRSTROW_HDR": "N",
									"P_CONTAINER": "working"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH, '/DATA_DT=', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@concat(activity('Lookup1').output.firstrow.FI_NM, pipeline().parameters.P_PRCS_OBJ.TGT_TBL)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Update Log Count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": {
										"value": "@activity('Copy STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Copy to Staging",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Update Log Count Preprocess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Preprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.ActualRecord",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Preprocessing",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": {
										"value": "@activity('Preprocessing').output.runOutput.ExpectedRecord",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE2_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "bin_onprim_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PCS_OBJ.PATH, '/', pipeline().parameters.P_PCS_OBJ.AS_AT_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FILE_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "bin_blob_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PCS_OBJ.CONTAINER",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PCS_OBJ.PATH, '/', pipeline().parameters.P_PCS_OBJ.AS_AT_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FILE_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FILE]",
								"storedProcedureParameters": {
									"P_ASAT_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_OBJ.AS_AT_DT",
											"type": "Expression"
										}
									},
									"P_FILE_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PCS_OBJ.FILE_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Check NULL and Duplicated",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/00_Common/edp/adf/dbn-adf-pre-check",
							"baseParameters": {
								"PARAMS": {
									"value": "@activity('Lookup1').output.firstrow.PARAMS",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Check NULL and Duplicated",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PCS_OBJ.PATH,'/',pipeline().parameters.P_PCS_OBJ.AS_AT_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FILE_NM",
										"type": "Expression"
									},
									"P_DELIMITER": {
										"value": "@activity('Lookup1').output.firstrow.DELIMITER",
										"type": "Expression"
									},
									"P_ENCODING": {
										"value": "@activity('Lookup1').output.firstrow.ENCODING",
										"type": "Expression"
									},
									"P_FIRSTROW_HDR": {
										"value": "@activity('Lookup1').output.firstrow.FRST_ROW_HDR",
										"type": "Expression"
									},
									"P_CONTAINER": {
										"value": "@activity('Lookup1').output.firstrow.CONTAINER",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PCS_OBJ.TGT_CONTAINER",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PCS_OBJ.TGT_PATH, '/ASAT_DT=', pipeline().parameters.P_PCS_OBJ.AS_AT_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FILE_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Update Log Count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Copy STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": {
										"value": "@activity('Copy STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Copy to Staging",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"parameters": {
					"P_LOAD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE2_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load text data from On-prim to STG",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Check NULL and Duplicated",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-adf-pre-check",
							"baseParameters": {
								"PARAMS": {
									"value": "@activity('Lookup1').output.firstrow.PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Check NULL and Duplicated",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH,'/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									},
									"P_DELIMITER": {
										"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
										"type": "Expression"
									},
									"P_ENCODING": {
										"value": "@activity('Lookup1').output.firstrow.ENCDNG",
										"type": "Expression"
									},
									"P_FIRSTROW_HDR": {
										"value": "@activity('Lookup1').output.firstrow.FRST_ROW_HD",
										"type": "Expression"
									},
									"P_CONTAINER": {
										"value": "@activity('Lookup1').output.firstrow.CNTNR",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH, '/DATA_DT=', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@concat(activity('Lookup1').output.firstrow.FI_NM, pipeline().parameters.P_PRCS_OBJ.TGT_TBL)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Update Log Count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Copy STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": {
										"value": "@activity('Copy STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Copy to Staging",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy binary on-prim to STG",
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_NM",
								"type": "Expression"
							},
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "bin_blob_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string"
					},
					"P_PRCS_NM": {
						"type": "string"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE4_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.P_PCS_OBJ.ADB_NM",
								"type": "Expression"
							},
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.P_PCS_OBJ.ADB_PARAMS",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "bin_onprim_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PCS_OBJ.PATH, '/', pipeline().parameters.P_PCS_OBJ.AS_AT_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FILE_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "bin_blob_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PCS_OBJ.CONTAINER",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PCS_OBJ.PATH, '/', pipeline().parameters.P_PCS_OBJ.AS_AT_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FILE_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_FILE]",
								"storedProcedureParameters": {
									"P_ASAT_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_OBJ.AS_AT_DT",
											"type": "Expression"
										}
									},
									"P_FILE_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PCS_OBJ.FILE_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_LOAD_ID": {
						"type": "string"
					},
					"P_PCS_NM": {
						"type": "string"
					},
					"P_PCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy binary sharepoints to STG",
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_NM",
								"type": "Expression"
							},
							"baseParameters": {
								"PARAMS": {
									"value": "@pipeline().parameters.P_PRCS_OBJ.ADB_PARM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('GetBearerToken').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sp_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"ServerRelativeUrl": {
										"value": "@concat('/sites/EDPFileCenterUAT/ShareCenter/Landing/', pipeline().parameters.P_PRCS_OBJ.PTH, '/', pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT, '/', activity('Lookup1').output.firstrow.FI_NM)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds2",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/',pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GetBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().globalParameters.P_GLBL_BEARER_TOKEN",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=8578d84d-db28-449a-9c11-a8bae5465c04@9fce0284-1a8c-4368-85b0-571bbad0df08&client_secret=mVbWh~igL5kKkzFVXEg6BLOw86--_G4.cd&resource=00000003-0000-0ff1-ce00-000000000000/kiatnakin365.sharepoint.com@9fce0284-1a8c-4368-85b0-571bbad0df08"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string"
					},
					"P_PRCS_NM": {
						"type": "string"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy sharepoints to ref",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('GetBearerToken').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sp_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"ServerRelativeUrl": {
										"value": "@concat('/sites/EDPFileCenterUAT/ShareCenter/Landing/', pipeline().parameters.P_PRCS_OBJ.PTH, '/', activity('Lookup1').output.firstrow.FI_NM)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds2",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH,'/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									},
									"P_DELIMITER": {
										"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
										"type": "Expression"
									},
									"P_ENCODING": {
										"value": "@activity('Lookup1').output.firstrow.ENCDNG",
										"type": "Expression"
									},
									"P_FIRSTROW_HDR": {
										"value": "@activity('Lookup1').output.firstrow.FRST_ROW_HD",
										"type": "Expression"
									},
									"P_CONTAINER": {
										"value": "@activity('Lookup1').output.firstrow.CNTNR",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Update Log Count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Copy STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": {
										"value": "@activity('Copy STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Copy to Staging",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().globalParameters.P_GLBL_BEARER_TOKEN",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=8578d84d-db28-449a-9c11-a8bae5465c04@9fce0284-1a8c-4368-85b0-571bbad0df08&client_secret=mVbWh~igL5kKkzFVXEg6BLOw86--_G4.cd&resource=00000003-0000-0ff1-ce00-000000000000/kiatnakin365.sharepoint.com@9fce0284-1a8c-4368-85b0-571bbad0df08"
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:50:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/40_PCS_COMMON_TYPE8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Reference file from On-prim",
				"activities": [
					{
						"name": "Copy Raw",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "onprim_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_bin_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH, '/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_FI]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.CALC_DATA_DT",
											"type": "Expression"
										}
									},
									"P_FI_ID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_OBJ.FI_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@activity('Lookup Schema').output",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "dl_csv_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.PTH,'/')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									},
									"P_DELIMITER": {
										"value": "@activity('Lookup1').output.firstrow.DLM_STRNG",
										"type": "Expression"
									},
									"P_ENCODING": {
										"value": "@activity('Lookup1').output.firstrow.ENCDNG",
										"type": "Expression"
									},
									"P_FIRSTROW_HDR": {
										"value": "@activity('Lookup1').output.firstrow.FRST_ROW_HD",
										"type": "Expression"
									},
									"P_CONTAINER": {
										"value": "@activity('Lookup1').output.firstrow.CNTNR",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dl_parquet_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_PRCS_OBJ.TGT_CNTNR",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@concat(pipeline().parameters.P_PRCS_OBJ.TGT_PTH)",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.FI_NM",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Update Log Count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": {
										"value": "@activity('Copy STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": {
										"value": "@activity('Copy STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "Complete Copy to Staging",
									"type": "String"
								},
								"P_ST": {
									"value": "Running",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILENAME": {
										"value": "@activity('Lookup1').output.firstrow.SCHM_FI",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"parameters": {
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "-999"
					},
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "GET_LOCATION_FACE_RECOGNITION_CustGeoInfo"
					},
					"P_PRCS_OBJ": {
						"type": "object"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:25:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprim_bin_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@replace(activity('Lookup1').output.firstrow.prop_0,'%DATA_DT%',activity('Lookup2').output.firstrow.DATA_DT)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "dl_sql_ds",
											"type": "DatasetReference",
											"parameters": {
												"P_FILEPATH": {
													"value": "@concat('TMP/STOREDSCRIPT/',pipeline().parameters.P_STREAM)",
													"type": "Expression"
												},
												"P_FILENAME": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dl_work_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILEPATH": {
										"value": "@concat('TMP/STOREDSCRIPT/',pipeline().parameters.P_STREAM)",
										"type": "Expression"
									},
									"P_FILENAME": "*.*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT  CONVERT(VARCHAR, [CALC_DATA_DT], 112) AS DATA_DT FROM ',pipeline().globalParameters.P_GLBL_CNTL_SCHEMA,'.[CNTL_CFG_STREM] WHERE STREM_NM = ''' , pipeline().parameters.P_STREAM, '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_STREAM": {
						"type": "string"
					}
				},
				"variables": {
					"p_file": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UTILS"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dl_work_ds')]",
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/datasets/dl_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RIB_EXT_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-folder-rib"
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dl_work_ds",
								"type": "DatasetReference",
								"parameters": {
									"P_FILEPATH": "TMP/RIBFOLDER",
									"P_FILENAME": "ribFolders.txt"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Notebook2",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/DEV/00_Common/edp/adf/dbn-gen-script-rib",
										"baseParameters": {
											"PARAMS": {
												"value": "@concat(item().Prop_0,'^|',item().Prop_1,'^|',item().Prop_2)\n",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_dbw_edp",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Notebook2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CREATE_EXTERNAL_TABLE]",
										"storedProcedureParameters": {
											"SQL": {
												"value": {
													"value": "@activity('Notebook2').output.runOutput",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "link_syn_kkpb_edp",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Notebook2_copy1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DEV/00_Common/edp/adf/dbn-compare-folder-rib"
						},
						"linkedServiceName": {
							"referenceName": "link_dbw_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SEND EMAIL",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Notebook2_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-05.southeastasia.logic.azure.com:443/workflows/87cb500b80b74094a5bea5f149f3b45a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=U4UdfX5WK2SF1bQKwro9Wmujq8RKOiGaTvcvclI17pw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@concat('{\"Message\": \"',activity('Notebook2_copy1').output.runOutput.RESULT_SET,'\",\"EmailTo\":\"pran.inteltion@gmail.com\",\n}')",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "UTILS"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dl_work_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFolderPath": "TEST",
									"wildcardFileName": "*.*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "bin_onprim_ds_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "bin_blob_ds_copy1",
								"type": "DatasetReference",
								"parameters": {
									"P_CONTAINER": "raw",
									"P_PATH": "TEST/20201231"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_PCS_COMMON_VALIDATE_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHECK STREAM INFORMATION",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET PROCESS INFORMATION').output.firstrow.CHECK_STREAM_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_LTST_PCS]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_DPND_PCS]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@activity('GET PROCESS INFORMATION').output.firstrow.AS_AT_DT",
											"type": "Expression"
										}
									},
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "STREAM NOT AVAILABLE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GET RECONCILE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_RECONCILE]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK RECONCILE",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET RECONCILE').output.FIRSTROW.RECONCILE_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK RECONCILE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstrow.CNT_SRC",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstrow.CNT_TGT",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON RECONCILE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstrow.CNT_SRC",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstrow.CNT_TGT",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "RECONCILE FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"description": "1: Call Azure Function\n2: Copy data",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('GET PROCESS INFORMATION').output.firstrow.PCS_TYPE",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "Azure Function1",
											"type": "AzureFunctionActivity",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"functionName": {
													"value": "@activity('GET PROCESS INFORMATION').output.firstRow.FUNC_NM",
													"type": "Expression"
												},
												"method": "POST",
												"headers": {},
												"body": {
													"value": "@activity('GET PROCESS INFORMATION').output.firstRow.PARAM",
													"type": "Expression"
												}
											},
											"linkedServiceName": {
												"referenceName": "link_func_edp",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "EDW UPDATE COUNT TARGET",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "Azure Function1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
												"storedProcedureParameters": {
													"P_CNT_SRC": {
														"value": null,
														"type": "String"
													},
													"P_CNT_TGT": {
														"value": null,
														"type": "String"
													},
													"P_LOAD_ID": {
														"value": {
															"value": "@pipeline().parameters.P_LOAD_ID",
															"type": "Expression"
														},
														"type": "String"
													},
													"P_PCS_NM": {
														"value": {
															"value": "@pipeline().parameters.P_PCS_NM",
															"type": "Expression"
														},
														"type": "String"
													},
													"P_RMRK": {
														"value": null,
														"type": "String"
													},
													"P_ST": {
														"value": "START",
														"type": "String"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "link_sqldb_kkpb_edp",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "PCS_COMMON_COPY",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE2",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_LOAD_ID": {
						"type": "string",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/30_PCS_COMMON_VALIDATE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHECK STREAM INFORMATION",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET PROCESS INFORMATION').output.firstrow.CHK_STREM_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_GET_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_LTST_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_LD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LD_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_DPND_PRCS]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_DATA_DT": {
										"type": "String",
										"value": {
											"value": "@activity('GET PROCESS INFORMATION').output.firstrow.DATA_DT",
											"type": "Expression"
										}
									},
									"P_LD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LD_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "STREAM NOT AVAILABLE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GET RECONCILE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_CHK_RCNCL]')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"P_LD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LD_ID",
											"type": "Expression"
										}
									},
									"P_PRCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PRCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK RECONCILE",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET RECONCILE').output.FIRSTROW.RCNCL_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK RECONCILE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON RECONCILE",
						"description": " ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstRow.ERR_MSG",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@concat(pipeline().globalParameters.P_GLBL_CNTL_SCHEMA, '.[PROC_UPDT_PRCS]')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PRCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PRCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								},
								"P_CNT_REC_CNTL": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"description": "1: Call Azure Function\n2: Copy data",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('GET PROCESS INFORMATION').output.firstrow.PRCS_TYPE",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "Execute Pipeline Type 1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE1",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "Execute Pipeline Type 2",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE2",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "Execute Pipeline Type 3",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE3",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "4",
									"activities": [
										{
											"name": "Execute Pipeline Type 4",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE4",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "5",
									"activities": [
										{
											"name": "Execute Pipeline Type 5",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE5",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "6",
									"activities": [
										{
											"name": "Execute Pipeline Type 6",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE6",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "7",
									"activities": [
										{
											"name": "Execute Pipeline Type 7",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE7",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LD_ID": {
														"value": "@pipeline().parameters.P_LD_ID",
														"type": "Expression"
													},
													"P_PRCS_NM": {
														"value": "@pipeline().parameters.P_PRCS_NM",
														"type": "Expression"
													},
													"P_PRCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.FIRSTROW",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"P_PRCS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_LD_ID": {
						"type": "string",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "COMMON JOB"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T06:46:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE2')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE4')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE5')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/30_PCS_COMMON_VALIDATE_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHECK STREAM INFORMATION",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET PROCESS INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET PROCESS INFORMATION').output.firstrow.CHECK_STREAM_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK STREAM INFORMATION",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "CHECK LATEST LOG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET LATEST LOG').output.FIRSTROW.LTST_LOG_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK LATEST LOG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET PROCESS INFORMATION",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_GET_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK DNDP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET DNDP').output.FIRSTROW.DPND_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PASS CHECK DNDP",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST LOG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_LTST_PCS]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GET DNDP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_DPND_PCS]",
								"storedProcedureParameters": {
									"P_AS_AT_DT": {
										"type": "String",
										"value": {
											"value": "@activity('GET PROCESS INFORMATION').output.firstrow.AS_AT_DT",
											"type": "Expression"
										}
									},
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UPDATE FAILED ON STREAM",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK STREAM INFORMATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "STREAM NOT AVAILABLE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON LATEST LOG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK LATEST LOG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "PREVIOUS CYCLE PROCESS DID NOT COMPLETE",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON DEPENDENCIES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "CHECKING DEPENDENCY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GET RECONCILE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CHK_RECONCILE]",
								"storedProcedureParameters": {
									"P_LOAD_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_LOAD_ID",
											"type": "Expression"
										}
									},
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PCS_NM",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CHECK RECONCILE",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GET RECONCILE').output.FIRSTROW.RECONCILE_F,'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ABORT CHECK RECONCILE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1/0",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "UPDATE SUCCESS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": null,
									"type": "String"
								},
								"P_ST": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON RECONCILE",
						"description": " ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CHECK RECONCILE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": {
										"value": "@activity('GET RECONCILE').output.firstRow.ERR_MSG",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UPDATE FAILED ON COPY ACTIVITY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CNTL].[PROC_UDT_PCS]",
							"storedProcedureParameters": {
								"P_CNT_FI_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_FI_TGT": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_SRC": {
									"value": null,
									"type": "String"
								},
								"P_CNT_REC_TGT": {
									"value": null,
									"type": "String"
								},
								"P_LOAD_ID": {
									"value": {
										"value": "@pipeline().parameters.P_LOAD_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_PCS_NM": {
									"value": {
										"value": "@pipeline().parameters.P_PCS_NM",
										"type": "Expression"
									},
									"type": "String"
								},
								"P_RMRK": {
									"value": "COPY ACTIVITY FAILED",
									"type": "String"
								},
								"P_ST": {
									"value": "FAILED",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "link_sqldb_kkpb_edp",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Switch1",
						"description": "1: Call Azure Function\n2: Copy data",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "CHECK DNDP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('GET PROCESS INFORMATION').output.firstrow.PCS_TYPE",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE1",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "PCS_COMMON_TYPE2",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE2",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE3",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE3",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "4",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE4",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE4",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "5",
									"activities": [
										{
											"name": "40_PCS_COMMON_TYPE5",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "40_PCS_COMMON_TYPE5",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"P_LOAD_ID": {
														"value": "@pipeline().parameters.P_LOAD_ID",
														"type": "Expression"
													},
													"P_PCS_NM": {
														"value": "@pipeline().parameters.P_PCS_NM",
														"type": "Expression"
													},
													"P_PCS_OBJ": {
														"value": "@activity('GET PROCESS INFORMATION').output.firstrow",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"P_PCS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_LOAD_ID": {
						"type": "string",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE2')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE4')]",
				"[concat(variables('factoryId'), '/pipelines/40_PCS_COMMON_TYPE5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10_PCS_COMMON_START_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "INSERT PROCESS LOG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[CNTL].[PROC_CNTL_START_PCS]",
								"storedProcedureParameters": {
									"P_PCS_NM": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_PROCESS_NM",
											"type": "Expression"
										}
									},
									"P_RUN_MODE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_RUN_MODE",
											"type": "Expression"
										}
									},
									"P_STREAM_SEQ_ID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_STREAM_SEQ_ID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "mssql_cntl_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "GET SKIP FLAG",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "INSERT PROCESS LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_SKIP_PROCESS",
							"value": {
								"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.SKIP_PROCESS",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CHECK SKIP FLAG",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GET SKIP FLAG",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GET LOAD ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('V_SKIP_PROCESS'),'0')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SKIP PROCESS",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT 1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "mssql_cntl_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "RUN_PCS_2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "30_PCS_COMMON_VALIDATE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_PCS_NM": {
												"value": "@pipeline().parameters.P_PROCESS_NM",
												"type": "Expression"
											},
											"P_RUN_MODE": {
												"value": "@pipeline().parameters.P_RUN_MODE",
												"type": "Expression"
											},
											"P_LOAD_ID": {
												"value": "@variables('V_LOAD_ID')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LOAD ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "INSERT PROCESS LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_LOAD_ID",
							"value": {
								"value": "@activity('INSERT PROCESS LOG').output.FIRSTROW.LOAD_ID",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"P_PROCESS_NM": {
						"type": "string",
						"defaultValue": "SINGHAARM_SINGHAARM_AGENT"
					},
					"P_RUN_MODE": {
						"type": "string",
						"defaultValue": "R"
					},
					"P_STREAM_SEQ_ID": {
						"type": "string",
						"defaultValue": "-999"
					}
				},
				"variables": {
					"V_SKIP_PROCESS": {
						"type": "String",
						"defaultValue": "999"
					},
					"V_LOAD_ID": {
						"type": "String",
						"defaultValue": "999"
					}
				},
				"folder": {
					"name": "BK"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-24T05:06:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mssql_cntl_ds')]",
				"[concat(variables('factoryId'), '/pipelines/30_PCS_COMMON_VALIDATE')]"
			]
		}
	]
}